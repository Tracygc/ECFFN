# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLOv5 object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolov5
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov5n.yaml' will call yolov5.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 1024]
  l: [1.00, 1.00, 1024]
  x: [1.33, 1.25, 1024]

ch: 4
# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  - [ -1, 1, Silence, [ ] ]  # 0-P1/2
  - [ 0, 1, SilenceChannel, [  0,3 ] ]  # 1-P1/2
  - [-1, 1, Conv, [64, 6, 2, 2]] # 2-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 3-P2/4
  - [-1, 3, C3, [128]]
  - [-1, 1, Conv, [256, 3, 2]] # 5-P3/8
  - [-1, 6, C3, [256]]


  - [ 0, 1, SilenceChannel, [ 3,4 ] ]  # 7-P1/2
  - [-1, 1, Conv, [64, 6, 2, 2]] # 8-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 9-P2/4
  - [-1, 3, C3, [128]]
  - [-1, 1, Conv, [256, 3, 2]] # 11-P3/8
  - [-1, 6, C3, [256]]

  - [[6, 12], 1, Concat, [1]]  # cat backbone P3   13

  - [-1, 1, Conv, [512, 3, 2]] # 14-P4/16
  - [-1, 9, C3, [512]]
  - [-1, 1, Conv, [1024, 3, 2]] # 16-P5/32
  - [-1, 3, C3, [1024]]  #17
  - [-1, 1, SPPF, [1024, 5]] # 18

# YOLOv5 v6.0 head
head:
  - [-1, 1, Conv, [512, 1, 1]]
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 15], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C3, [512, False]] # 22

  - [-1, 1, Conv, [256, 1, 1]]
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 13], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C3, [256, False]] # 26 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 22], 1, Concat, [1]] # cat head P4
  - [-1, 3, C3, [512, False]] # 29 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 18], 1, Concat, [1]] # cat head P5
  - [-1, 3, C3, [1024, False]] # 32 (P5/32-large)

#  - [[26, 29, 32], 1, Detect, [nc]] # Detect(P3, P4, P5)


#    # routing
  - [ 6, 1, CBLinear, [ [ 256 ] ] ] # 33
  #    # routing
  - [ 12, 1, CBLinear, [ [ 256 ] ] ] # 34

  - [ 15, 1, CBLinear, [ [ 256, 512 ] ] ] # 35
  - [ 18, 1, CBLinear, [ [ 256, 512, 1024 ] ] ] # 36

  # conv down
  - [ 0, 1, Conv, [ 64, 3, 2 ] ]  # 37-P1/2
  # conv down
  - [ -1, 1, Conv, [ 128, 3, 2 ] ]  # 38-P2/4
  - [ -1, 3, C3, [ 128, False ] ] # 39-P2/4

  # conv down fuse
  - [ -1, 1, Conv, [ 256, 3, 2 ] ]  # 40-P3/8
  - [ [ 33,34,35,36, -1 ], 1, CBFuse, [ [ 0, 0, 0, 0 ] ] ] # 41
  - [ -1, 3, C3, [ 256, False ] ] # 42

  # conv down fuse
  - [ -1, 1, Conv, [ 512, 3, 2 ] ]  # 43-P4/16
  - [ [ 35,36, -1 ], 1, CBFuse, [ [ 1, 1 ] ] ] # 44
  - [ -1, 3, C3, [ 512, False ] ] # 45

  # conv down fuse
  - [ -1, 1, Conv, [ 1024, 3, 2 ] ]  # 46-P5/32
  - [ [ 36, -1 ], 1, CBFuse, [ [ 2 ] ] ] # 47
  - [ -1, 3, C3, [ 1024, True ] ] # 48


  - [[26, 29, 32, 42,45,48], 1, DetectAux, [nc]] # Detect(P3, P4, P5)
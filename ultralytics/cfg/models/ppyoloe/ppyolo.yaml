# PPYOLO1
# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]
# PPYOLO by yoloair        PPYOLO系列的原始文件来自于 "https://github.com/iscyy/yoloair"   此模型使用时请关掉 amp  ，否则会报错，建议使用轻量级的 PPYOLOE
backbone:
  # [from, number, module, args]
  [
    [-1,1,ResNet50vd_dcn,[64,0]],  #c out
    [-1,1,ResNet50vd_dcn,[256,1]],
    [-1,1,ResNet50vd_dcn,[512,2]], #2
    [-1,1,ResNet50vd_dcn,[1024,3]], #3
    [-1,1,ResNet50vd_dcn,[2048,4]], #4
  ]

head:
  [
    [-1, 1, CoordConv, [2048, 512, 1, 0]],
    [-1, 1, PPConvBlock, [512, False, True]],  # 
    [-1, 1, SPP, [512]],
    [-1, 1, PPConvBlock, [512, True, True]],
    [-1 ,1, CoordConv, [512, 1024, 3, 1]],        #9 

    [8, 1, CoordConv, [512, 256, 1, 0]], #10
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
    [[-1, 3], 1, Concat, [1]],  # cat
    [-1, 1, Conv, [256, 1, 1]],
    [-1, 1, PPConvBlock, [256, True,True]],
    [-1, 1, PPConvBlock, [256, False, True]],
    [-1 ,1, CoordConv, [256, 512, 3, 1]],        #16 out 512 channel

    [15, 1, CoordConv, [256, 128, 1, 0]],      #17
    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
    [[-1, 2], 1, Concat, [1]],  # cat
    [-1, 1, Conv, [128, 1, 1]],
    [ -1, 1, PPConvBlock, [ 128, True, True ] ],
    [ -1, 1, PPConvBlock, [ 128, False , True ] ],
    [-1 ,1, CoordConv, [128, 256, 3, 1]],        #23 out 256 channel

   [[9, 16, 23], 1, Detect, [nc]],  # Detect(P3, P4, P5)
  ]

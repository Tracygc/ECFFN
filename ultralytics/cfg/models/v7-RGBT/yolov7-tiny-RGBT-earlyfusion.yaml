# parameters
nc: 80  # number of classes
#depth_multiple: 1.0  # model depth multiple
#width_multiple: 1.0  # layer channel multiple


ch: 4
# yolov7-tiny backbone
backbone:
  # [from, number, module, args] c2, k=1, s=1, p=None, g=1, act=True
  [
   [ -1, 1, Silence, [ ] ] , # 0-P1/2
   [ 0, 1, SilenceChannel, [ 0,4 ] ] , # 1-P1/2
   [-1, 1, Conv, [32, 3, 2, None, 1]],  # 2-P1/2

   [-1, 1, Conv, [64, 3, 2, None, 1]],  # 3-P2/4
   [-1, 1, ELAN_t, [64, 1, 1, None, 1]],  # 4

   [-1, 1, MP_1, [64]],  # 5-P3/8
   [-1, 1, ELAN_t, [128, 1, 1, None, 1]],  # 6
#
   [-1, 1, MP_1, [128]],  # 7-P4/16
   [-1, 1, ELAN_t, [256, 1, 1, None, 1]],  # 8
##
   [-1, 1, MP_1, [256]],  # 9-P5/32
   [-1, 1, ELAN_t, [512, 1, 1, None, 1]],  # 10
   [-1, 1, SPPCSPCSIM, [256]], # 11
  ]

# yolov7-tiny head
head:
#  [
  [
   [-1, 1, Conv, [128, 1, 1, None, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [8, 1, Conv, [128, 1, 1, None, 1]], # route backbone P4
   [[-1, -2], 1, Concat, [1]], # 15
   [-1, 1, ELAN_t, [128, 1, 1, None, 1]],  # 16

   [-1, 1, Conv, [64, 1, 1, None, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [6, 1, Conv, [64, 1, 1, None, 1]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],
   [-1, 1, ELAN_t, [64, 1, 1, None, 1]],  # 21

   [-1, 1, Conv, [128, 3, 2, None, 1]],
   [[-1, 16], 1, Concat, [1]],
   [-1, 1, ELAN_t, [128, 1, 1, None, 1]],  # 24 P4

   [-1, 1, Conv, [256, 3, 2, None, 1]],
   [[-1, 11], 1, Concat, [1]],
   [-1, 1, ELAN_t, [256, 1, 1, None, 1]],  # 27  p5

   [21, 1, Conv, [128, 3, 1, None, 1]],
   [24, 1, Conv, [256, 3, 1, None, 1]],
   [27, 1, Conv, [512, 3, 1, None, 1]],

#   [-1, 1, Classify, [nc]] # Classify
   [[28,29,30], 1, Detect, [nc]] # Detect(P3, P4, P5)

#   [[26], 1, Segment, [nc, 32, 256]] # Detect(P3, P4, P5)
  ]

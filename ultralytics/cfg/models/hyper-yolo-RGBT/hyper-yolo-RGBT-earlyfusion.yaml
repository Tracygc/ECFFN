# Ultralytics YOLO üöÄ, AGPL-3.0 license
# Hyper-YOLO object detection model with N3-N5 outputs. 
# hyper-yolo Á≥ªÂàóÁöÑÂéüÂßãÊñá‰ª∂Êù•Ëá™‰∫éÈ≠îÈ¨ºÈù¢ÂÖ∑ÁöÑYOLOv11È°πÁõÆ
# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=hyper-yolon.yaml' will call hyper-yolo.yaml with scale 'n'
  # [depth, width, max_channels, threshold]
  n: [0.33, 0.25, 1024, 6]
  s: [0.33, 0.50, 1024, 8]
  m: [0.67, 0.75, 768, 10]
  l: [1.00, 1.00, 512, 10]
  x: [1.00, 1.25, 512, 12]

ch: 4
# Hyper-YOLO backbone
backbone:
  - [-1, 1, Silence, []]  # 0-P1/2
  - [0, 1, SilenceChannel, [0,4]]  # 1-P1/2
  - [-1, 1, Conv, [64, 3, 2]]  # 2-B1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 3
  - [-1, 3, MANet, [128, True, 2, 3]] # 4-B2/4
  - [-1, 1, Conv, [256, 3, 2]]  # 5
  - [-1, 6, MANet, [256, True, 2, 5]] # 6-B3/8
  - [-1, 1, Conv, [512, 3, 2]]  # 7
  - [-1, 6, MANet, [512, True, 2, 5]] # 8-B4/16
  - [-1, 1, Conv, [1024, 3, 2]]  # 9-P5/32
  - [-1, 3, MANet, [1024, True, 2, 3]] # 10
  - [-1, 1, SPPF, [1024, 5]]  # 11-B5/32

# Hyper-YOLO head
head:
  # Semantic Collecting
  - [2, 1, nn.AvgPool2d, [8, 8, 0]] # 12
  - [4, 1, nn.AvgPool2d, [4, 4, 0]] # 13
  - [6, 1, nn.AvgPool2d, [2, 2, 0]] # 14
  - [11, 1, nn.Upsample, [None, 2, 'nearest']] # 15
  - [[12, 13, 14, 8, 15], 1, Concat, [1]]  # cat 16

  # Hypergraph Computation
  - [-1, 1, Conv, [512, 1, 1]] # 17
  - [-1, 1, HyperComputeModule, [512]] # 18
  - [-1, 3, MANet, [512, True, 2, 3]] # 19

  # Semantic Collecting
  - [-1, 1, nn.AvgPool2d, [2, 2, 0]] # 20
  - [[-1,11], 1, Concat, [1]]  # cat 21
  - [-1, 1, Conv, [1024, 1, 1]] # 22 P5

  - [[19, 8], 1, Concat, [1]]  # cat 23
  - [-1, 3, MANet, [512, False, 2, 3]]  # 24 P4

  - [19, 1, nn.Upsample, [None, 2, 'nearest']] # 25
  - [[-1, 6], 1, Concat, [1]]  # cat 26
  - [-1, 3, MANet, [256, False, 2, 3]]  # 27 P3/N3

  - [-1, 1, Conv, [256, 3, 2]] # 28
  - [[-1, 24], 1, Concat, [1]]  # 29 cat
  - [-1, 3, MANet, [512, False, 2, 3]]  # 30 N4

  - [-1, 1, Conv, [512, 3, 2]] # 31
  - [[-1, 22], 1, Concat, [1]]  # 32 cat
  - [-1, 3, C2f, [1024, False]]  # 33 N5
  - [[27, 30, 33], 1, Detect, [nc]]  # Detect(N3, N4, N5)
#  - [[10], 1, Detect, [nc]]  # Detect(N3, N4, N5)
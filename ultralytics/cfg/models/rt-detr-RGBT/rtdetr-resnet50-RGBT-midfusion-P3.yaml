# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics RT-DETR-ResNet50 hybrid object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/rtdetr
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

ch: 4
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Silence, []]  # 0-P1/2

  # visible
  - [0, 1, SilenceChannel, [0,3]]  # 1-P1/2
  - [-1, 1, ResNetLayer, [3, 64, 1, True, 1]] # 2
  - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]] # 3
  - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]] #4

  # infrared
  - [0, 1, SilenceChannel, [3,4]]  # 5-P1/2
  - [-1, 1, ResNetLayer, [1, 64, 1, True, 1]] # 6
  - [-1, 1, ResNetLayer, [64, 64, 1, False, 3]] # 7
  - [-1, 1, ResNetLayer, [256, 128, 2, False, 4]] # 8


  - [[4, 8], 1, Concat, [1]]  # cat backbone P3   9
  - [-1, 1, ResNetLayer, [1024, 256, 2, False, 6]] # 10
  - [-1, 1, ResNetLayer, [1024, 512, 2, False, 3]] # 11

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 12
  - [-1, 1, AIFI, [1024, 8]]
  - [-1, 1, Conv, [256, 1, 1]] # 14

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [10, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 16
  - [[-2, -1], 1, Concat, [1]]
  - [-1, 3, RepC3, [256]] # 18
  - [-1, 1, Conv, [256, 1, 1]] # 19

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [9, 1, Conv, [256, 1, 1, None, 1, 1, False]] # 21
  - [[-2, -1], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, RepC3, [256]] # X3 (23), fpn_blocks.1

  - [-1, 1, Conv, [256, 3, 2]] #24 , downsample_convs.0
  - [[-1, 19], 1, Concat, [1]] # cat Y4
  - [-1, 3, RepC3, [256]] # F4 (26), pan_blocks.0

  - [-1, 1, Conv, [256, 3, 2]] # 27, downsample_convs.1
  - [[-1, 14], 1, Concat, [1]] # cat Y5
  - [-1, 3, RepC3, [256]] # F5 (29), pan_blocks.1

  - [[23, 26, 29], 1, RTDETRDecoder, [nc]] # Detect(P3, P4, P5)
